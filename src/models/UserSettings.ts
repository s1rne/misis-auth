import mongoose, { Document, Schema } from 'mongoose';

export interface IUserSettings extends Document {
  _id: string;
  userId: string;
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
  maxApplications: number;
  
  // –ë—É–¥—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∑–¥–µ—Å—å:
  // maxTokensPerApplication?: number;
  // allowedScopes?: string[];
  // sessionTimeout?: number;
  // twoFactorEnabled?: boolean;
  // emailNotifications?: boolean;
  
  createdAt: Date;
  updatedAt: Date;
}

const UserSettingsSchema = new Schema<IUserSettings>({
  userId: {
    type: String,
    required: true,
    unique: true,
    ref: 'User',
  },
  
  maxApplications: {
    type: Number,
    default: 5, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    min: 0,
  },
  
  // –ë—É–¥—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  // maxTokensPerApplication: {
  //   type: Number,
  //   default: 100,
  // },
  // allowedScopes: [{
  //   type: String,
  // }],
  // sessionTimeout: {
  //   type: Number,
  //   default: 3600, // 1 —á–∞—Å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  // },
  // twoFactorEnabled: {
  //   type: Boolean,
  //   default: false,
  // },
  // emailNotifications: {
  //   type: Boolean,
  //   default: true,
  // },
  
}, {
  timestamps: true,
});

// –ò–Ω–¥–µ–∫—Å—ã
// UserSettingsSchema.index({ userId: 1 }); // –£–±–∏—Ä–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ unique: true —É–∂–µ —Å–æ–∑–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å

// Middleware –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// (—ç—Ç–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –±—É–¥—É—â–µ–º)

// –û—á–∏—â–∞–µ–º –∫—ç—à –º–æ–¥–µ–ª–∏
if (mongoose.models.UserSettings) {
  console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –º–æ–¥–µ–ª—å UserSettings –∏–∑ –∫—ç—à–∞');
  delete mongoose.models.UserSettings;
// }
}

export default mongoose.model<IUserSettings>('UserSettings', UserSettingsSchema);
